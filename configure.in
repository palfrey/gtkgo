dnl Process this file with autoconf to produce a configure script.

AC_INIT(src)
AM_INIT_AUTOMAKE(gtkgo, 0.0.10)

AC_PROG_AWK
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S

missing=""
AC_CHECK_LIB(m, pow)
AC_PATH_PROG(sedpath, sed)
if test "_$sedpath" = _; then
  AC_MSG_ERROR("Cannot find sed: I need it\!")
fi
AM_PATH_GTK(1.2.0, , missing="${missing} gtk+")
AC_CHECK_LIB(gdk_imlib,gdk_imlib_load_image,,missing="${missing} imlib",[
	$GTK_LIBS])
AC_HEADER_STDC
AC_TYPE_SIZE_T
AC_STRUCT_TM

if test "x${missing}" != x; then
  echo
  for missing_pkg in ${missing}; do
    echo "Can't find libraries (or headers) of \"${missing_pkg}\"."
    case "$missing_pkg" in
      gtk+)  echo "  Fetch it from <URL:ftp://ftp.gtk.org/>"
	;;
      imlib) echo "  Fetch it from <URL:http://www.labs.redhat.com/imlib/>"
	;;
    esac
  done
  AC_MSG_ERROR(Can't find all necessary libraries / headers)
fi

AC_ARG_ENABLE(gnome,
[  --disable-gnome         disable use of gnome],
        gnome=$enableval, gnome=yes)

AM_CONDITIONAL(USE_GNOME, test "x$gnome" = "xyes")

dnl
dnl I ripped the next test from X-Chat 0.9.4
dnl

if test "$gnome" = yes; then
  AC_PATH_PROG(gnomepath, gnome-config)
  AC_MSG_CHECKING(for Gnome compile flags)
  GNOME_CFLAGS=`$gnomepath gnomeui --cflags 2>/dev/null`
  GNOME_VER=`$gnomepath --version |$sedpath 's/gnome-libs //'`
  GNOME_MAJOR=`echo $GNOME_VER |$sedpath 's/\([[0-9]*]*\).\([[0-9]*]*\).\([[0-9]*]*\)/\1/'`
  if test "_$GNOME_MAJOR" = "_0"; then
    gnome=no
    AC_MSG_RESULT([old Gnome found, building without it.])
    LIBS="$LIBS $GTK_LIBS"
    CFLAGS="$CFLAGS $GTK_CFLAGS"
  else
    if test "_$GNOME_CFLAGS" = _ ; then
      gnome=no
      AC_MSG_RESULT([not found, building without Gnome.])
      LIBS="$LIBS $GTK_LIBS"
      CFLAGS="$CFLAGS $GTK_CFLAGS"
    else
      AC_MSG_RESULT(ok)
      LIBS="$LIBS `$gnomepath zvt gnomeui --libs`"
      CFLAGS="$CFLAGS $GNOME_CFLAGS"
      AC_DEFINE(USE_GNOME)
    fi
  fi
else
  LIBS="$LIBS $GTK_LIBS"
  CFLAGS="$CFLAGS $GTK_CFLAGS"
fi

AC_OUTPUT(Makefile \
	computers/Makefile \
	help/Makefile \
	mp3/Makefile \
	pix/Makefile \
	skins/Makefile \
	src/Makefile \
	)

rm -f ~/.gtkgo
echo
if test "$gnome" = "yes"; then
  echo ...building gtkgo $VERSION with Gnome $GNOME_VER!
else
  echo ...building gtkgo $VERSION without Gnome!
fi
echo
